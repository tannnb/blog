(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{566:function(t,s,a){t.exports=a.p+"assets/img/http01.666d7d20.jpg"},604:function(t,s,a){"use strict";a.r(s);var e=a(29),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"http相关"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http相关"}},[t._v("#")]),t._v(" http相关")]),t._v(" "),e("h3",{attrs:{id:"tcp-和-udp-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcp-和-udp-的区别"}},[t._v("#")]),t._v(" TCP 和 UDP 的区别")]),t._v(" "),e("p",[t._v("TCP是一个面向连接的、可靠的、基于字节流的传输层协议; 而UDP是一个面向无连接的传输层协议。")]),t._v(" "),e("ul",[e("li",[e("ol",[e("li",[t._v("面向连接：所谓的连接，指的是客户端和服务器的连接，在双方互相通信之前，TCP 需要三次握手建立连接，而 UDP 没有相应建立连接的过程。")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[e("p",[t._v("可靠性：TCP花了非常多的功夫保证连接的可靠性。")]),t._v(" "),e("p",[t._v("这个可靠性体现在哪些方面呢？一个是有状态，另一个是可控制")]),t._v(" "),e("p",[t._v("TCP 会精准记录哪些数据发送了，哪些数据被对方接收了，哪些没有被接收到，而且保证数据包按序到达，不允许半点差错。这是有状态")]),t._v(" "),e("p",[t._v("当意识到丢包了或者网络环境不佳，TCP 会根据具体情况调整自己的行为，控制自己的发送速度或者重发。这是可控制。")]),t._v(" "),e("p",[t._v("相应的，UDP 就是无状态, 不可控的。")])])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"3"}},[e("li",[t._v("面向字节流：UDP 的数据传输是基于数据报的，这是因为仅仅只是继承了 IP 层的特性，而 TCP 为了维护状态，将一个个 IP 包变成了字节流。")])])])]),t._v(" "),e("h3",{attrs:{id:"三次握手的过程是怎样的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三次握手的过程是怎样的"}},[t._v("#")]),t._v(" 三次握手的过程是怎样的")]),t._v(" "),e("div",{staticStyle:{"text-align":"left"}},[e("img",{attrs:{src:a(566)}})]),t._v(" "),e("ol",[e("li",[e("p",[t._v("从最开始双方都处于CLOSED状态。然后服务端开始监听某个端口，进入了LISTEN状态。")])]),t._v(" "),e("li",[e("p",[t._v("然后客户端主动发起连接，发送 SYN , 自己变成了SYN-SENT状态。")])]),t._v(" "),e("li",[e("p",[t._v("服务端接收到，返回SYN和ACK(对应客户端发来的SYN)，自己变成了SYN-RCVD。")])]),t._v(" "),e("li",[e("p",[t._v("之后客户端再发送ACK给服务端，自己变成了ESTABLISHED状态；服务端收到ACK之后，也变成了ESTABLISHED状态。")])])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("凡是需要对端确认的，一定消耗TCP报文的序列号。")]),t._v(" "),e("p",[t._v("SYN 需要对端的确认， 而 ACK 并不需要，因此 SYN 消耗一个序列号而 ACK 不需要")])]),t._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为什么不是两次？")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 原因:无法确认客户端的接收能力。")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 假设是两次，你现在发了 SYN 报文想握手，但是这个包滞留在了当前的网络中迟迟没有到达，TCP 以为这是丢了包，于是重传，两次握手建立好了连接。")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 看似没有问题，但是连接关闭后，如果这个滞留在网路中的包到达了服务端呢？这时候由于是两次握手，服务端只要接收到然后发送相应的数据包，就默认建立连接，但是现在客户端已经断开了")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为什么不是四次？")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 三次握手的目的是确认双方`发送`和`接收`的能力, 三次就足够了。")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);