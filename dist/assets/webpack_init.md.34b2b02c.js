import{_ as s,o as a,c as n,V as e}from"./chunks/framework.b9206b98.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"webpack/init.md"}'),l={name:"webpack/init.md"},p=e(`<h2 id="初始化webpack" tabindex="-1">初始化webpack <a class="header-anchor" href="#初始化webpack" aria-label="Permalink to &quot;初始化webpack&quot;">​</a></h2><p>首先新建一下项目文件(project),并初始化</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># or</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 安装webpack依赖</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">webpack</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">webpack-cli</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># -S: --save(保存) 包名会被注册在package.json的dependencies里面，在生产环境下这个包的依赖依然存在</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># -D: --dev(生产)  包名会被注册在package.json的devDependencies里面，仅在开发环境下存在的包用-D，如babel，sass-loader这些解析器</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 安装依赖不添加 -S -D 参数，默认安装到dependencies里</span></span></code></pre></div><p>在项目中新建src文件，并添加<code>index.js</code>,既 <code>project/src/index.js</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello Webpack 5</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>最简单的打包：</p><ul><li>1.直接在项目根目录下执行<code>npx webpack</code>,进行快速打包。此时项目会多出一个<code>dist/main</code>文件夹</li><li>2.在<code>package.json</code>中编辑scripts命令：<code>&quot;build&quot;: &quot;webpack&quot;</code>,执行<code>npm run build</code></li></ul>`,7),o=[p];function c(t,i,r,d,y,C){return a(),n("div",null,o)}const _=s(l,[["render",c]]);export{A as __pageData,_ as default};
